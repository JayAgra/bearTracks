function addProperty(e,t,n){void 0!==e[t]?e[t]+=n:(e[t]=0,addProperty(e,t,n))}const waitMs=e=>new Promise(t=>setTimeout(t,e));function goToHome(){history.back()}async function getTeamRanks(){let e=document.getElementById("eventCode").value,t=Number(document.getElementById("weightType").value);document.getElementById("viewTeamsButton").innerText="Requesting Data...";let n=new XMLHttpRequest;n.open("GET",`/api/teams/current/${e}`,!0),n.withCredentials=!0,n.onreadystatechange=async()=>{if(n.readyState===XMLHttpRequest.DONE&&200===n.status){document.getElementById("viewTeamsButton").innerText="Rendering View...";var a={},r={};for(let s in JSON.parse(n.responseText).forEach(e=>{addProperty(a,e.team,Number(e.weight.split(",")[Number(t)])),addProperty(r,e.team,1)}),a)a[s]/=r[s];var d="";Object.entries(a).sort((e,t)=>t[1]-e[1]).forEach((t,n,a)=>{d+=`<tr><td>${n+1}</td><td><a href="/browse?number=${t[0]}&type=team&event=${e}" style="all: unset; color: #2997FF; text-decoration: none;">${t[0]}</a></td><td>${Math.round(t[1])}%</td><td><progress id="scoreWt" max="${a[0][1]}" value="${Math.round(t[1])}"></progress></td>`}),document.getElementById("preInsert").insertAdjacentHTML("afterend",d),document.getElementById("search").style.display="none",document.getElementById("results").style.display="flex",document.getElementById("eventCodeDisplay").innerHTML=`Top teams at ${e}<br>${document.getElementById("weightType").selectedOptions[0].innerText}`,document.getElementById("viewTeamsButton").innerText="View"}else 401===n.status||403===n.status?window.location.href="/login":400===n.status?document.getElementById("viewTeamsButton").innerText="bad request":500===n.status?document.getElementById("viewTeamsButton").innerText="internal server error":502===n.status?document.getElementById("viewTeamsButton").innerText="server error: bad gateway":document.getElementById("viewTeamsButton").innerText="downloading data..."},n.send()}